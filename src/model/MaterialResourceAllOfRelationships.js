/**
 * TeSS JSON-API
 * An implementation of the API for ELIXIR's TeSS, following JSON-API (http://jsonapi.org/) standards.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: tess-support@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MultiRelationshipObject from './MultiRelationshipObject';
import OptionalRelationshipObject from './OptionalRelationshipObject';
import SingleRelationshipObject from './SingleRelationshipObject';

/**
 * The MaterialResourceAllOfRelationships model module.
 * @module model/MaterialResourceAllOfRelationships
 * @version 1.4.0
 */
class MaterialResourceAllOfRelationships {
    /**
     * Constructs a new <code>MaterialResourceAllOfRelationships</code>.
     * @alias module:model/MaterialResourceAllOfRelationships
     */
    constructor() { 
        
        MaterialResourceAllOfRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaterialResourceAllOfRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaterialResourceAllOfRelationships} obj Optional instance to populate.
     * @return {module:model/MaterialResourceAllOfRelationships} The populated <code>MaterialResourceAllOfRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaterialResourceAllOfRelationships();

            if (data.hasOwnProperty('user')) {
                obj['user'] = SingleRelationshipObject.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('content-provider')) {
                obj['content-provider'] = OptionalRelationshipObject.constructFromObject(data['content-provider']);
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = MultiRelationshipObject.constructFromObject(data['nodes']);
            }
            if (data.hasOwnProperty('collections')) {
                obj['collections'] = MultiRelationshipObject.constructFromObject(data['collections']);
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = MultiRelationshipObject.constructFromObject(data['events']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaterialResourceAllOfRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaterialResourceAllOfRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `user`
        if (data['user']) { // data not null
          SingleRelationshipObject.validateJSON(data['user']);
        }
        // validate the optional field `content-provider`
        if (data['content-provider']) { // data not null
          OptionalRelationshipObject.validateJSON(data['content-provider']);
        }
        // validate the optional field `nodes`
        if (data['nodes']) { // data not null
          MultiRelationshipObject.validateJSON(data['nodes']);
        }
        // validate the optional field `collections`
        if (data['collections']) { // data not null
          MultiRelationshipObject.validateJSON(data['collections']);
        }
        // validate the optional field `events`
        if (data['events']) { // data not null
          MultiRelationshipObject.validateJSON(data['events']);
        }

        return true;
    }


}



/**
 * @member {module:model/SingleRelationshipObject} user
 */
MaterialResourceAllOfRelationships.prototype['user'] = undefined;

/**
 * @member {module:model/OptionalRelationshipObject} content-provider
 */
MaterialResourceAllOfRelationships.prototype['content-provider'] = undefined;

/**
 * @member {module:model/MultiRelationshipObject} nodes
 */
MaterialResourceAllOfRelationships.prototype['nodes'] = undefined;

/**
 * @member {module:model/MultiRelationshipObject} collections
 */
MaterialResourceAllOfRelationships.prototype['collections'] = undefined;

/**
 * @member {module:model/MultiRelationshipObject} events
 */
MaterialResourceAllOfRelationships.prototype['events'] = undefined;






export default MaterialResourceAllOfRelationships;

