/**
 * TeSS JSON-API
 * An implementation of the API for ELIXIR's TeSS, following JSON-API (http://jsonapi.org/) standards.
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: tess-support@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventAttributesReport model module.
 * @module model/EventAttributesReport
 * @version 0.2.0
 */
class EventAttributesReport {
    /**
     * Constructs a new <code>EventAttributesReport</code>.
     * An after-the-fact report of what happened at the event. Only visible to privileged users.
     * @alias module:model/EventAttributesReport
     */
    constructor() { 
        
        EventAttributesReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventAttributesReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventAttributesReport} obj Optional instance to populate.
     * @return {module:model/EventAttributesReport} The populated <code>EventAttributesReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventAttributesReport();

            if (data.hasOwnProperty('funding')) {
                obj['funding'] = ApiClient.convertToType(data['funding'], 'String');
            }
            if (data.hasOwnProperty('attendee_count')) {
                obj['attendee_count'] = ApiClient.convertToType(data['attendee_count'], 'Number');
            }
            if (data.hasOwnProperty('applicant_count')) {
                obj['applicant_count'] = ApiClient.convertToType(data['applicant_count'], 'Number');
            }
            if (data.hasOwnProperty('trainer_count')) {
                obj['trainer_count'] = ApiClient.convertToType(data['trainer_count'], 'Number');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = ApiClient.convertToType(data['feedback'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventAttributesReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventAttributesReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['funding'] && !(typeof data['funding'] === 'string' || data['funding'] instanceof String)) {
            throw new Error("Expected the field `funding` to be a primitive type in the JSON string but got " + data['funding']);
        }
        // ensure the json data is a string
        if (data['feedback'] && !(typeof data['feedback'] === 'string' || data['feedback'] instanceof String)) {
            throw new Error("Expected the field `feedback` to be a primitive type in the JSON string but got " + data['feedback']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}



/**
 * Details on who funded the event.
 * @member {String} funding
 */
EventAttributesReport.prototype['funding'] = undefined;

/**
 * The number of people who attended the event.
 * @member {Number} attendee_count
 */
EventAttributesReport.prototype['attendee_count'] = undefined;

/**
 * The number of people who applied to attend the event.
 * @member {Number} applicant_count
 */
EventAttributesReport.prototype['applicant_count'] = undefined;

/**
 * The number of trainers who were involved with the event.
 * @member {Number} trainer_count
 */
EventAttributesReport.prototype['trainer_count'] = undefined;

/**
 * Notes, or a link to feedback for the event.
 * @member {String} feedback
 */
EventAttributesReport.prototype['feedback'] = undefined;

/**
 * Miscellaneous notes on the event.
 * @member {String} notes
 */
EventAttributesReport.prototype['notes'] = undefined;






export default EventAttributesReport;

