/**
 * TeSS JSON-API
 * An implementation of the API for ELIXIR's TeSS, following JSON-API (http://jsonapi.org/) standards.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: tess-support@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Collection from './model/Collection';
import CollectionAttributes from './model/CollectionAttributes';
import CollectionCollection from './model/CollectionCollection';
import CollectionResource from './model/CollectionResource';
import ContentProvider from './model/ContentProvider';
import ContentProviderAttributes from './model/ContentProviderAttributes';
import ContentProviderCollection from './model/ContentProviderCollection';
import ContentProviderResource from './model/ContentProviderResource';
import ContentProviderResourceAllOfRelationships from './model/ContentProviderResourceAllOfRelationships';
import Event from './model/Event';
import EventAttributes from './model/EventAttributes';
import EventAttributesReport from './model/EventAttributesReport';
import EventCollection from './model/EventCollection';
import EventResource from './model/EventResource';
import EventResourceAllOfRelationships from './model/EventResourceAllOfRelationships';
import ExternalResource from './model/ExternalResource';
import Facet from './model/Facet';
import FacetedCollection from './model/FacetedCollection';
import FacetedCollectionAllOfMeta from './model/FacetedCollectionAllOfMeta';
import JsonApiResponse from './model/JsonApiResponse';
import Links from './model/Links';
import Material from './model/Material';
import MaterialAttributes from './model/MaterialAttributes';
import MaterialCollection from './model/MaterialCollection';
import MaterialResource from './model/MaterialResource';
import MaterialResourceAllOfRelationships from './model/MaterialResourceAllOfRelationships';
import MultiRelationshipObject from './model/MultiRelationshipObject';
import Node from './model/Node';
import NodeAttributes from './model/NodeAttributes';
import NodeAttributesStaffInner from './model/NodeAttributesStaffInner';
import NodeCollection from './model/NodeCollection';
import NodeResource from './model/NodeResource';
import NodeResourceAllOfRelationships from './model/NodeResourceAllOfRelationships';
import OntologyTerm from './model/OntologyTerm';
import OptionalRelationshipObject from './model/OptionalRelationshipObject';
import OptionalResourceIdentifierObject from './model/OptionalResourceIdentifierObject';
import PaginationLinks from './model/PaginationLinks';
import ResourceIdentifierObject from './model/ResourceIdentifierObject';
import ResourceObject from './model/ResourceObject';
import SingleRelationshipObject from './model/SingleRelationshipObject';
import User from './model/User';
import UserAttributes from './model/UserAttributes';
import UserCollection from './model/UserCollection';
import UserResource from './model/UserResource';
import Workflow from './model/Workflow';
import WorkflowAttributes from './model/WorkflowAttributes';
import WorkflowCollection from './model/WorkflowCollection';
import WorkflowResource from './model/WorkflowResource';
import WorkflowResourceAllOfRelationships from './model/WorkflowResourceAllOfRelationships';
import CollectionsApi from './api/CollectionsApi';
import ContentProvidersApi from './api/ContentProvidersApi';
import EventsApi from './api/EventsApi';
import MaterialsApi from './api/MaterialsApi';
import NodesApi from './api/NodesApi';
import UsersApi from './api/UsersApi';
import WorkflowsApi from './api/WorkflowsApi';


/**
* An implementation of the API for ELIXIR&#39;s TeSS, following JSON-API (http://jsonapi.org/) standards..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TessJsonApi = require('index'); // See note below*.
* var xxxSvc = new TessJsonApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TessJsonApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TessJsonApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TessJsonApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.4.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Collection model constructor.
     * @property {module:model/Collection}
     */
    Collection,

    /**
     * The CollectionAttributes model constructor.
     * @property {module:model/CollectionAttributes}
     */
    CollectionAttributes,

    /**
     * The CollectionCollection model constructor.
     * @property {module:model/CollectionCollection}
     */
    CollectionCollection,

    /**
     * The CollectionResource model constructor.
     * @property {module:model/CollectionResource}
     */
    CollectionResource,

    /**
     * The ContentProvider model constructor.
     * @property {module:model/ContentProvider}
     */
    ContentProvider,

    /**
     * The ContentProviderAttributes model constructor.
     * @property {module:model/ContentProviderAttributes}
     */
    ContentProviderAttributes,

    /**
     * The ContentProviderCollection model constructor.
     * @property {module:model/ContentProviderCollection}
     */
    ContentProviderCollection,

    /**
     * The ContentProviderResource model constructor.
     * @property {module:model/ContentProviderResource}
     */
    ContentProviderResource,

    /**
     * The ContentProviderResourceAllOfRelationships model constructor.
     * @property {module:model/ContentProviderResourceAllOfRelationships}
     */
    ContentProviderResourceAllOfRelationships,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventAttributes model constructor.
     * @property {module:model/EventAttributes}
     */
    EventAttributes,

    /**
     * The EventAttributesReport model constructor.
     * @property {module:model/EventAttributesReport}
     */
    EventAttributesReport,

    /**
     * The EventCollection model constructor.
     * @property {module:model/EventCollection}
     */
    EventCollection,

    /**
     * The EventResource model constructor.
     * @property {module:model/EventResource}
     */
    EventResource,

    /**
     * The EventResourceAllOfRelationships model constructor.
     * @property {module:model/EventResourceAllOfRelationships}
     */
    EventResourceAllOfRelationships,

    /**
     * The ExternalResource model constructor.
     * @property {module:model/ExternalResource}
     */
    ExternalResource,

    /**
     * The Facet model constructor.
     * @property {module:model/Facet}
     */
    Facet,

    /**
     * The FacetedCollection model constructor.
     * @property {module:model/FacetedCollection}
     */
    FacetedCollection,

    /**
     * The FacetedCollectionAllOfMeta model constructor.
     * @property {module:model/FacetedCollectionAllOfMeta}
     */
    FacetedCollectionAllOfMeta,

    /**
     * The JsonApiResponse model constructor.
     * @property {module:model/JsonApiResponse}
     */
    JsonApiResponse,

    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links,

    /**
     * The Material model constructor.
     * @property {module:model/Material}
     */
    Material,

    /**
     * The MaterialAttributes model constructor.
     * @property {module:model/MaterialAttributes}
     */
    MaterialAttributes,

    /**
     * The MaterialCollection model constructor.
     * @property {module:model/MaterialCollection}
     */
    MaterialCollection,

    /**
     * The MaterialResource model constructor.
     * @property {module:model/MaterialResource}
     */
    MaterialResource,

    /**
     * The MaterialResourceAllOfRelationships model constructor.
     * @property {module:model/MaterialResourceAllOfRelationships}
     */
    MaterialResourceAllOfRelationships,

    /**
     * The MultiRelationshipObject model constructor.
     * @property {module:model/MultiRelationshipObject}
     */
    MultiRelationshipObject,

    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node,

    /**
     * The NodeAttributes model constructor.
     * @property {module:model/NodeAttributes}
     */
    NodeAttributes,

    /**
     * The NodeAttributesStaffInner model constructor.
     * @property {module:model/NodeAttributesStaffInner}
     */
    NodeAttributesStaffInner,

    /**
     * The NodeCollection model constructor.
     * @property {module:model/NodeCollection}
     */
    NodeCollection,

    /**
     * The NodeResource model constructor.
     * @property {module:model/NodeResource}
     */
    NodeResource,

    /**
     * The NodeResourceAllOfRelationships model constructor.
     * @property {module:model/NodeResourceAllOfRelationships}
     */
    NodeResourceAllOfRelationships,

    /**
     * The OntologyTerm model constructor.
     * @property {module:model/OntologyTerm}
     */
    OntologyTerm,

    /**
     * The OptionalRelationshipObject model constructor.
     * @property {module:model/OptionalRelationshipObject}
     */
    OptionalRelationshipObject,

    /**
     * The OptionalResourceIdentifierObject model constructor.
     * @property {module:model/OptionalResourceIdentifierObject}
     */
    OptionalResourceIdentifierObject,

    /**
     * The PaginationLinks model constructor.
     * @property {module:model/PaginationLinks}
     */
    PaginationLinks,

    /**
     * The ResourceIdentifierObject model constructor.
     * @property {module:model/ResourceIdentifierObject}
     */
    ResourceIdentifierObject,

    /**
     * The ResourceObject model constructor.
     * @property {module:model/ResourceObject}
     */
    ResourceObject,

    /**
     * The SingleRelationshipObject model constructor.
     * @property {module:model/SingleRelationshipObject}
     */
    SingleRelationshipObject,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserAttributes model constructor.
     * @property {module:model/UserAttributes}
     */
    UserAttributes,

    /**
     * The UserCollection model constructor.
     * @property {module:model/UserCollection}
     */
    UserCollection,

    /**
     * The UserResource model constructor.
     * @property {module:model/UserResource}
     */
    UserResource,

    /**
     * The Workflow model constructor.
     * @property {module:model/Workflow}
     */
    Workflow,

    /**
     * The WorkflowAttributes model constructor.
     * @property {module:model/WorkflowAttributes}
     */
    WorkflowAttributes,

    /**
     * The WorkflowCollection model constructor.
     * @property {module:model/WorkflowCollection}
     */
    WorkflowCollection,

    /**
     * The WorkflowResource model constructor.
     * @property {module:model/WorkflowResource}
     */
    WorkflowResource,

    /**
     * The WorkflowResourceAllOfRelationships model constructor.
     * @property {module:model/WorkflowResourceAllOfRelationships}
     */
    WorkflowResourceAllOfRelationships,

    /**
    * The CollectionsApi service constructor.
    * @property {module:api/CollectionsApi}
    */
    CollectionsApi,

    /**
    * The ContentProvidersApi service constructor.
    * @property {module:api/ContentProvidersApi}
    */
    ContentProvidersApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The MaterialsApi service constructor.
    * @property {module:api/MaterialsApi}
    */
    MaterialsApi,

    /**
    * The NodesApi service constructor.
    * @property {module:api/NodesApi}
    */
    NodesApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WorkflowsApi service constructor.
    * @property {module:api/WorkflowsApi}
    */
    WorkflowsApi
};
