/*
 * TeSS JSON-API
 * An implementation of the API for ELIXIR's TeSS, following JSON-API (http://jsonapi.org/) standards.
 *
 * OpenAPI spec version: 0.2.0
 * Contact: tess-support@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TessJsonApi);
  }
}(this, function(expect, TessJsonApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('WorkflowAttributes', function() {
      beforeEach(function() {
        instance = new TessJsonApi.WorkflowAttributes();
      });

      it('should create an instance of WorkflowAttributes', function() {
        // TODO: update the code to test WorkflowAttributes
        expect(instance).to.be.a(TessJsonApi.WorkflowAttributes);
      });

      it('should have the property slug (base name: "slug")', function() {
        // TODO: update the code to test the property slug
        expect(instance).to.have.property('slug');
        // expect(instance.slug).to.be(expectedValueLiteral);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property workflowContent (base name: "workflow-content")', function() {
        // TODO: update the code to test the property workflowContent
        expect(instance).to.have.property('workflowContent');
        // expect(instance.workflowContent).to.be(expectedValueLiteral);
      });

      it('should have the property doi (base name: "doi")', function() {
        // TODO: update the code to test the property doi
        expect(instance).to.have.property('doi');
        // expect(instance.doi).to.be(expectedValueLiteral);
      });

      it('should have the property createdAt (base name: "created-at")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property updatedAt (base name: "updated-at")', function() {
        // TODO: update the code to test the property updatedAt
        expect(instance).to.have.property('updatedAt');
        // expect(instance.updatedAt).to.be(expectedValueLiteral);
      });

      it('should have the property keywords (base name: "keywords")', function() {
        // TODO: update the code to test the property keywords
        expect(instance).to.have.property('keywords');
        // expect(instance.keywords).to.be(expectedValueLiteral);
      });

      it('should have the property licence (base name: "licence")', function() {
        // TODO: update the code to test the property licence
        expect(instance).to.have.property('licence');
        // expect(instance.licence).to.be(expectedValueLiteral);
      });

      it('should have the property difficultyLevel (base name: "difficulty-level")', function() {
        // TODO: update the code to test the property difficultyLevel
        expect(instance).to.have.property('difficultyLevel');
        // expect(instance.difficultyLevel).to.be(expectedValueLiteral);
      });

      it('should have the property authors (base name: "authors")', function() {
        // TODO: update the code to test the property authors
        expect(instance).to.have.property('authors');
        // expect(instance.authors).to.be(expectedValueLiteral);
      });

      it('should have the property contributors (base name: "contributors")', function() {
        // TODO: update the code to test the property contributors
        expect(instance).to.have.property('contributors');
        // expect(instance.contributors).to.be(expectedValueLiteral);
      });

      it('should have the property targetAudience (base name: "target-audience")', function() {
        // TODO: update the code to test the property targetAudience
        expect(instance).to.have.property('targetAudience');
        // expect(instance.targetAudience).to.be(expectedValueLiteral);
      });

      it('should have the property scientificTopics (base name: "scientific-topics")', function() {
        // TODO: update the code to test the property scientificTopics
        expect(instance).to.have.property('scientificTopics');
        // expect(instance.scientificTopics).to.be(expectedValueLiteral);
      });

    });
  });

}));
